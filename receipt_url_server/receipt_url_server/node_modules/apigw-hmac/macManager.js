var fs = require('fs');
var crypto = require('crypto');

//Constants
var KEY_FILENAME = __dirname + "/NHNAPIGatewayKey.properties";
var MAX_MESSAGESIZE = 255;
var ALGORITHM = "sha1";

var makeEncryptUrl = function(key, url) {
	var currentTime = new Date().getTime();
	var message = url.substring(0, Math.min(MAX_MESSAGESIZE, url.length));
	message = message + currentTime;

	//hmac hash(http://nodejs.org/api/crypto.html)
	var md = crypto.createHmac(ALGORITHM, key).update(message).digest('base64');

	//urlencode
	md = encodeURIComponent(md);

	var separator = "?"; 
	if(url.indexOf("?") != -1) {
		separator =  "&";
	}
	var encryptedUrl =  url + separator + "msgpad=" + currentTime + "&md=" + md;
	return encryptedUrl;
}

var getKeyFromFile = function(filename) {
	var keyPairs = fs.readFileSync(filename, 'utf8').split('=');
	var key = keyPairs[1].replace(/^\s*|\s*$/g, '');
	return key;
} 

exports.getEncryptUrl = function(url) {
	var key = getKeyFromFile(KEY_FILENAME);
	return makeEncryptUrl(key, url);
}

exports.getEncryptUrlByFile = function(url, filename) {
	var key = getKeyFromFile(filename);
	return makeEncryptUrl(key, url);
}

exports.getEncryptUrlByKey = function(url, key) {
	return makeEncryptUrl(key, url);
}